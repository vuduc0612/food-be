stages:
  - test
  - build
  - docker
  - deploy

variables:
  MAVEN_CLI_OPTS: "-q -e -B"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_DRIVER: overlay2
  APP_NAME: "food-delivery-back-end"
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"

cache:
  key: "$CI_PROJECT_NAME-m2"
  paths:
    - .m2/repository

before_script:
  - echo "Java and Maven build in GitLab CI"

unit_test:
  stage: test
  image: maven:3.9.9-eclipse-temurin-21
  script:
    - mvn $MAVEN_CLI_OPTS -DskipTests=false test
  artifacts:
    when: always
    reports:
      junit: target/surefire-reports/TEST-*.xml

build_jar:
  stage: build
  image: maven:3.9.9-eclipse-temurin-21
  needs: ["unit_test"]
  script:
    - mvn $MAVEN_CLI_OPTS -DskipTests clean package
  artifacts:
    paths:
      - target/*.jar

docker_build_push:
  stage: docker
  image: docker:27.3.1
  services:
    - docker:27.3.1-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    - docker build -t "$IMAGE_TAG" .
    - docker push "$IMAGE_TAG"
  rules:
    - if: $CI_COMMIT_BRANCH

deploy_prod:
  stage: deploy
  image: alpine:3.20
  needs: ["docker_build_push"]
  before_script:
    - apk add --no-cache openssh-client bash
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
  script:
    - |
      ssh $SSH_USER@$SSH_HOST "mkdir -p ~/apps/$APP_NAME"
      scp docker-compose.prod.yml $SSH_USER@$SSH_HOST:~/apps/$APP_NAME/docker-compose.yml
      ssh $SSH_USER@$SSH_HOST "APP_NAME=$APP_NAME IMAGE_TAG=$IMAGE_TAG CI_REGISTRY=$CI_REGISTRY CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE DB_USERNAME=$DB_USERNAME DB_PASSWORD=$DB_PASSWORD REDIS_HOST=$REDIS_HOST REDIS_PORT=$REDIS_PORT REDIS_PASSWORD=$REDIS_PASSWORD RABBITMQ_HOST=$RABBITMQ_HOST RABBITMQ_PORT=$RABBITMQ_PORT RABBITMQ_USERNAME=$RABBITMQ_USERNAME RABBITMQ_PASSWORD=$RABBITMQ_PASSWORD MAIL_HOST=$MAIL_HOST MAIL_PORT=$MAIL_PORT MAIL_USERNAME=$MAIL_USERNAME MAIL_PASSWORD=$MAIL_PASSWORD CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY CLOUDINARY_API_SECRET=$CLOUDINARY_API_SECRET OPENROUTE_API_KEY=$OPENROUTE_API_KEY JWT_SECRET_KEY=$JWT_SECRET_KEY JWT_EXPIRATION_TIME=$JWT_EXPIRATION_TIME TMN_CODE=$TMN_CODE VNPAY_SECRET_KEY=$VNPAY_SECRET_KEY docker compose -f ~/apps/$APP_NAME/docker-compose.yml pull && docker compose -f ~/apps/$APP_NAME/docker-compose.yml up -d"
  environment:
    name: production
    url: https://$PROD_URL
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


